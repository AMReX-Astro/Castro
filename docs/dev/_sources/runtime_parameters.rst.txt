namespace: ``castro``
---------------------

**AMR**

.. index:: castro.state_interp_order, castro.lin_limit_state_interp, castro.state_nghost, castro.do_reflux, castro.update_sources_after_reflux, castro.apply_sources_consecutively


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``state_interp_order``                 | highest order used in interpolation                     | 1             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``lin_limit_state_interp``             | how to do limiting of the state data when interpolating | 0             |
|                                        | 0: only prevent new extrema 1: preserve linear          |               |
|                                        | combinations of state variables                         |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``state_nghost``                       | Number of ghost zones for state data to have. Note that | 0             |
|                                        | if you are using radiation, choosing this to be zero    |               |
|                                        | will be overridden since radiation needs at least one   |               |
|                                        | ghost zone.                                             |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``do_reflux``                          | do we do the hyperbolic reflux at coarse-fine           | 1             |
|                                        | interfaces?                                             |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``update_sources_after_reflux``        | whether to re-compute new-time source terms after a     | 1             |
|                                        | reflux Note: this only works for the CTU and simple-SDC |               |
|                                        | time_integration_method drivers                         |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``apply_sources_consecutively``        | should we apply the sources one by one or all at once?  | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+



**hydrodynamics**

.. index:: castro.difmag, castro.small_dens, castro.small_temp, castro.small_pres, castro.small_ener, castro.do_hydro, castro.time_integration_method, castro.limit_fourth_order, castro.initialization_is_cell_average, castro.use_reconstructed_gamma1, castro.add_ext_src, castro.hybrid_hydro, castro.ppm_type, castro.mhd_plm_slope, castro.ppm_temp_fix, castro.plm_iorder, castro.plm_limiter, castro.hybrid_riemann, castro.riemann_solver, castro.cg_maxiter, castro.cg_tol, castro.cg_blend, castro.use_eos_in_riemann, castro.use_flattening, castro.transverse_use_eos, castro.transverse_reset_density, castro.transverse_reset_rhoe, castro.dual_energy_eta1, castro.dual_energy_eta2, castro.use_pslope, castro.pslope_cutoff_density, castro.limit_fluxes_on_small_dens, castro.limit_fluxes_on_large_vel, castro.speed_limit, castro.do_sponge, castro.sponge_implicit, castro.ext_src_implicit, castro.source_term_predictor, castro.first_order_hydro, castro.xl_ext_bc_type, castro.xr_ext_bc_type, castro.yl_ext_bc_type, castro.yr_ext_bc_type, castro.zl_ext_bc_type, castro.zr_ext_bc_type, castro.hse_zero_vels, castro.hse_interp_temp, castro.hse_reflect_vels, castro.fill_ambient_bc, castro.ambient_fill_dir, castro.ambient_outflow_vel, castro.clamp_ambient_temp, castro.ambient_safety_factor, castro.sdc_order, castro.sdc_quadrature, castro.sdc_extra, castro.sdc_solver, castro.sdc_solver_tol_dens, castro.sdc_solver_tol_spec, castro.sdc_solver_tol_ener, castro.sdc_solver_atol, castro.sdc_solver_relax_factor, castro.sdc_solve_for_rhoe, castro.sdc_use_analytic_jac


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``difmag``                             | the coefficient of the artificial viscosity             | 0.1           |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``small_dens``                         | the small density cutoff.  Densities below this value   | -1.e200       |
|                                        | will be reset                                           |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``small_temp``                         | the small temperature cutoff.  Temperatures below this  | -1.e200       |
|                                        | value will be reset                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``small_pres``                         | the small pressure cutoff.  Pressures below this value  | -1.e200       |
|                                        | will be reset                                           |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``small_ener``                         | the small specific internal energy cutoff.  Internal    | -1.e200       |
|                                        | energies below this value will be reset                 |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``do_hydro``                           | permits hydro to be turned on and off for running pure  | -1            |
|                                        | rad problems                                            |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``time_integration_method``            | how do we advance in time? 0 = CTU + Strang, 1 is not   | 0             |
|                                        | used, 2 = SDC, 3 = simplified-SDC                       |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``limit_fourth_order``                 | do we use a limiter with the fourth-order accurate      | 1             |
|                                        | reconstruction?                                         |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``initialization_is_cell_average``     | for fourth order, we usually assume that the            | 0             |
|                                        | initialization is done to cell centers and we convert   |               |
|                                        | to cell-averages.  With this option, we take the        |               |
|                                        | initialization as cell-averages (except for T, which we |               |
|                                        | compute to fourth-order through the EOS after           |               |
|                                        | initialization).                                        |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``use_reconstructed_gamma1``           | should we use a reconstructed version of Gamma_1 in the | 0             |
|                                        | Riemann solver? or the default zone average (requires   |               |
|                                        | SDC integration, since we do not trace)                 |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``add_ext_src``                        | if true, define an additional source term               | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``hybrid_hydro``                       | whether to use the hybrid advection scheme that updates | 0             |
|                                        | z-angular momentum, cylindrical momentum, and azimuthal |               |
|                                        | momentum (3D only)                                      |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``ppm_type``                           | reconstruction type: 0: piecewise linear; 1: classic    | 1             |
|                                        | Colella \& Woodward ppm; 2: extrema-preserving ppm      |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``mhd_plm_slope``                      | MHD plm slopes: 0 zero slope 1 vanleer 2 centered, no   | 1             |
|                                        | limit 3 2nd order MC limiter                            |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``ppm_temp_fix``                       | various methods of giving temperature a larger role in  | 0             |
|                                        | the reconstruction---see Zingale \& Katz 2015           |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``plm_iorder``                         | for piecewise linear, reconstruction order to use 1 =   | 2             |
|                                        | piecewise constant, 2 = piecewise linear                |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``plm_limiter``                        | for piecewise linear, what limiter to use? 1 = 2nd      | 2             |
|                                        | order MC, 2 = 4th order MC                              |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``hybrid_riemann``                     | do we drop from our regular Riemann solver to HLL when  | 0             |
|                                        | we are in shocks to avoid the odd-even decoupling       |               |
|                                        | instability?                                            |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``riemann_solver``                     | which Riemann solver do we use: 0: Colella, Glaz, \&    | 0             |
|                                        | Ferguson (a two-shock solver); 1: Colella \& Glaz (a    |               |
|                                        | two-shock solver) 2: HLLC                               |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``cg_maxiter``                         | for the Colella \& Glaz Riemann solver, the maximum     | 12            |
|                                        | number of iterations to take when solving for the star  |               |
|                                        | state                                                   |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``cg_tol``                             | for the Colella \& Glaz Riemann solver, the tolerance   | 1.0e-5        |
|                                        | to demand in finding the star state                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``cg_blend``                           | for the Colella \& Glaz Riemann solver, what to do if   | 2             |
|                                        | we do not converge to a solution for the star state. 0  |               |
|                                        | = do nothing; print iterations and exit 1 = revert to   |               |
|                                        | the original guess for p-star 2 = do a bisection search |               |
|                                        | for another 2 * cg_maxiter iterations.                  |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``use_eos_in_riemann``                 | should we use the EOS in the Riemann solver to ensure   | 0             |
|                                        | thermodynamic consistency?                              |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``use_flattening``                     | flatten the reconstructed profiles around shocks to     | 1             |
|                                        | prevent them from becoming too thin                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``transverse_use_eos``                 | after we add the transverse correction to the interface | 0             |
|                                        | states, replace the predicted pressure with an EOS call |               |
|                                        | (using :math:`e` and :math:`\rho`).                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``transverse_reset_density``           | if the transverse interface state correction, if the    | 1             |
|                                        | new density is negative, then replace all of the        |               |
|                                        | interface quantities with their values without the      |               |
|                                        | transverse correction.                                  |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``transverse_reset_rhoe``              | if the interface state for :math:`(\rho e)` is negative | 0             |
|                                        | after we add the transverse terms, then replace the     |               |
|                                        | interface value of :math:`(\rho e)` with a value        |               |
|                                        | constructed from the :math:`(\rho e)` evolution         |               |
|                                        | equation                                                |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``dual_energy_eta1``                   | Threshold value of (E - K) / E such that above eta1,    | 1.0e0         |
|                                        | the hydrodynamic pressure is derived from E - K;        |               |
|                                        | otherwise, we use the internal energy variable UEINT.   |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``dual_energy_eta2``                   | Threshold value of (E - K) / E such that above eta2, we | 1.0e-4        |
|                                        | update the internal energy variable UEINT to match E -  |               |
|                                        | K. Below this, UEINT remains unchanged.                 |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``use_pslope``                         | for the piecewise linear reconstruction, do we subtract | 1             |
|                                        | off :math:`(\rho g)` from the pressure before limiting? |               |
|                                        | This is a well-balanced method that does well with HSE  |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``pslope_cutoff_density``              | if we are using pslope, below what density to we turn   | -1.e20        |
|                                        | off the well-balanced reconstruction?                   |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``limit_fluxes_on_small_dens``         | Should we limit the density fluxes so that we do not    | 0             |
|                                        | create small densities?                                 |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``limit_fluxes_on_large_vel``          | Should we limit the momentum fluxes so that we do not   | 0             |
|                                        | create large velocities?                                |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``speed_limit``                        | If we're limiting the fluxes to avoid large velocities, | 2.99792458e10 |
|                                        | this is the speed limit.                                |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``do_sponge``                          | permits sponge to be turned on and off                  | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sponge_implicit``                    | if we are using the sponge, whether to use the implicit | 1             |
|                                        | solve for it                                            |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``ext_src_implicit``                   | if we are using user-defined source terms, are these    | 0             |
|                                        | solved implicitly?                                      |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``source_term_predictor``              | extrapolate the source terms (gravity and rotation) to  | 0             |
|                                        | :math:`n+1/2` timelevel for use in the interface state  |               |
|                                        | prediction                                              |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``first_order_hydro``                  | set the flattening parameter to zero to force the       | 0             |
|                                        | reconstructed profiles to be flat, resulting in a       |               |
|                                        | first-order method                                      |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``xl_ext_bc_type``                     | if we are doing an external -x boundary condition, who  | "fillme"      |
|                                        | do we interpret it?                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``xr_ext_bc_type``                     | if we are doing an external +x boundary condition, who  | "fillme"      |
|                                        | do we interpret it?                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``yl_ext_bc_type``                     | if we are doing an external -y boundary condition, who  | "fillme"      |
|                                        | do we interpret it?                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``yr_ext_bc_type``                     | if we are doing an external +y boundary condition, who  | "fillme"      |
|                                        | do we interpret it?                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``zl_ext_bc_type``                     | if we are doing an external -z boundary condition, who  | "fillme"      |
|                                        | do we interpret it?                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``zr_ext_bc_type``                     | if we are doing an external +z boundary condition, who  | "fillme"      |
|                                        | do we interpret it?                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``hse_zero_vels``                      | if we are doing HSE boundary conditions, do we zero the | 0             |
|                                        | velocity?                                               |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``hse_interp_temp``                    | if we are doing HSE boundary conditions, should we get  | 0             |
|                                        | the temperature via interpolation (using model_parser)  |               |
|                                        | or hold it constant?                                    |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``hse_reflect_vels``                   | if we are doing HSE boundary conditions, how do we      | 0             |
|                                        | treat the velocity? reflect? or outflow?                |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``fill_ambient_bc``                    | fills physical domain boundaries with the ambient state | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``ambient_fill_dir``                   | which direction do we do ambient BCs?  -1 = all, 0 = x, | -1            |
|                                        | 1 = y, 2 = z                                            |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``ambient_outflow_vel``                | in the ambient region, do we do a basic outflow in the  | 0             |
|                                        | normal direction of the velocity (with a min/max to     |               |
|                                        | ensure it is outgoing)                                  |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``clamp_ambient_temp``                 | clamps the ambient material to the ambient temperature  | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``ambient_safety_factor``              | specifies the upper limit, as a multiple of the ambient | 1.1e0         |
|                                        | density, for operations that are applied to ambient     |               |
|                                        | material, such as clamping T.                           |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_order``                          | integration order for SDC integration valid options are | 2             |
|                                        | 2 and 4                                                 |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_quadrature``                     | which quadrature type to use with SDC?  0 = Gauss-      | 0             |
|                                        | Lobatto, 1 = Radau                                      |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_extra``                          | number of extra SDC iterations to take beyond the order | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_solver``                         | which SDC nonlinear solver to use?  1 = Newton, 2 =     | 1             |
|                                        | VODE, 3 = VODE for first iter                           |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_solver_tol_dens``                | relative tolerance for the nonlinear solve on rho with  | 1.e-6         |
|                                        | SDC                                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_solver_tol_spec``                | relative tolerance for the nonlinear solve on rho X_k   | 1.e-6         |
|                                        | with SDC                                                |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_solver_tol_ener``                | relative tolerance for the nonlinear solve on (rho e)   | 1.e-6         |
|                                        | or (rho E) with SDC                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_solver_atol``                    | absolute tolerance for species with SDC (this will be   | 1.e-10        |
|                                        | multiplied by the current rho in the zone to define the |               |
|                                        | absolute tolerance on (rho X)).                         |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_solver_relax_factor``            | factor by which to reduce the SDC solver tol for each   | 1.0           |
|                                        | iteration before the last (e.g., for iteration k out of |               |
|                                        | kmax iterations, the tol is                             |               |
|                                        | :math:`\epsilon/f^{(k_\mathrm{max} - k)}`               |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_solve_for_rhoe``                 | do we solve for (rho e) or (rho E) in the SDC nonlinear | 1             |
|                                        | solve?                                                  |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_use_analytic_jac``               | do we use the analytic or numerical Jacobian?           | 1             |
+----------------------------------------+---------------------------------------------------------+---------------+



**timestep control**

.. index:: castro.fixed_dt, castro.initial_dt, castro.dt_cutoff, castro.max_dt, castro.cfl, castro.init_shrink, castro.change_max, castro.plot_per_is_exact, castro.small_plot_per_is_exact, castro.use_retry, castro.retry_subcycle_factor, castro.use_post_step_regrid, castro.max_subcycles, castro.sdc_iters


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``fixed_dt``                           | a fixed timestep to use for all steps (negative turns   | -1.0          |
|                                        | it off)                                                 |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``initial_dt``                         | the initial timestep (negative uses the step returned   | -1.0          |
|                                        | from the timestep constraints)                          |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``dt_cutoff``                          | the smallest valid timestep, as a fraction of the       | 1.e-12        |
|                                        | current simulation time. if we go below this, we abort. |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``max_dt``                             | the largest valid timestep---limit all timesteps to be  | 1.e200        |
|                                        | no larger than this                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``cfl``                                | the effective Courant number to use---we will not allow | 0.8           |
|                                        | the hydrodynamic waves to cross more than this fraction |               |
|                                        | of a zone over a single timestep                        |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``init_shrink``                        | a factor by which to reduce the first timestep from     | 1.0           |
|                                        | that requested by the timestep estimators               |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``change_max``                         | the maximum factor by which the timestep can increase   | 1.1           |
|                                        | or decrease from one step to the next                   |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``plot_per_is_exact``                  | enforce that the AMR plot interval must be hit exactly  | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``small_plot_per_is_exact``            | enforce that the AMR small plot interval must be hit    | 0             |
|                                        | exactly                                                 |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``use_retry``                          | Retry a timestep if it violated the timestep-limiting   | 1             |
|                                        | criteria or other checks (negative density, burn        |               |
|                                        | failure) over the course of an advance. The criteria    |               |
|                                        | will suggest a new timestep that satisfies the          |               |
|                                        | criteria, and we will do subcycled timesteps on the     |               |
|                                        | same level until we reach the original target time.     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``retry_subcycle_factor``              | When performing a retry, the factor to multiply the     | 0.5           |
|                                        | current timestep by when trying again.                  |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``use_post_step_regrid``               | Check for a possible post-timestep regrid if certain    | 0             |
|                                        | stability criteria were violated.                       |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``max_subcycles``                      | Do not permit more subcycled timesteps than this        | 10            |
|                                        | parameter. Set to a negative value to disable this      |               |
|                                        | criterion.                                              |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sdc_iters``                          | Number of iterations for the SDC advance.               | 2             |
+----------------------------------------+---------------------------------------------------------+---------------+



**reactions**

.. index:: castro.dtnuc_e, castro.dtnuc_T, castro.dtnuc_X, castro.dtnuc_X_threshold, castro.do_react, castro.react_T_min, castro.react_T_max, castro.react_rho_min, castro.react_rho_max, castro.disable_shock_burning, castro.T_guess, castro.reactions_max_solve_level


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``dtnuc_e``                            | Limit the timestep based on how much the burning can    | 1.e200        |
|                                        | change the internal energy of a zone. The timestep is   |               |
|                                        | equal to ``dtnuc``  :math:`\cdot\,(e / \dot{e})`.       |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``dtnuc_T``                            | Limit the timestep based on how much the burning can    | 1.e200        |
|                                        | change the temperature of a zone. The timestep is equal |               |
|                                        | to ``dtnuc``  :math:`\cdot\,(T / \dot{T})`.             |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``dtnuc_X``                            | Limit the timestep based on how much the burning can    | 1.e200        |
|                                        | change the species mass fractions of a zone. The        |               |
|                                        | timestep is equal to ``dtnuc``  :math:`\cdot\,(X /      |               |
|                                        | \dot{X})`.                                              |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``dtnuc_X_threshold``                  | If we are using the timestep limiter based on changes   | 1.e-3         |
|                                        | in $X$, set a threshold on the species abundance below  |               |
|                                        | which the limiter is not applied. This helps prevent    |               |
|                                        | the timestep from becoming very small due to changes in |               |
|                                        | trace species.                                          |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``do_react``                           | permits reactions to be turned on and off -- mostly for | -1            |
|                                        | efficiency's sake                                       |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``react_T_min``                        | minimum temperature for allowing reactions to occur in  | 0.0           |
|                                        | a zone                                                  |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``react_T_max``                        | maximum temperature for allowing reactions to occur in  | 1.e200        |
|                                        | a zone                                                  |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``react_rho_min``                      | minimum density for allowing reactions to occur in a    | 0.0           |
|                                        | zone                                                    |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``react_rho_max``                      | maximum density for allowing reactions to occur in a    | 1.e200        |
|                                        | zone                                                    |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``disable_shock_burning``              | disable burning inside hydrodynamic shock regions       | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``T_guess``                            | initial guess for the temperature when inverting the    | 1.e8          |
|                                        | EoS (e.g. when calling eos_input_re)                    |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``reactions_max_solve_level``          | maximum level to do an explicit burn on (above this, we | 100           |
|                                        | interpolate the reactions source)                       |               |
+----------------------------------------+---------------------------------------------------------+---------------+



**diffusion**

.. index:: castro.diffuse_temp, castro.diffuse_cutoff_density, castro.diffuse_cutoff_density_hi, castro.diffuse_cond_scale_fac


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``diffuse_temp``                       | enable thermal diffusion                                | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``diffuse_cutoff_density``             | set a cutoff density for diffusion -- we zero the term  | -1.e200       |
|                                        | out below this density                                  |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``diffuse_cutoff_density_hi``          | secondary cutoff density -- there will be a linear      | -1.e200       |
|                                        | dropoff in the diffusion coefficient between this and   |               |
|                                        | the primary cutoff density. This should be the larger   |               |
|                                        | of the two                                              |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``diffuse_cond_scale_fac``             | scaling factor for conductivity                         | 1.0           |
+----------------------------------------+---------------------------------------------------------+---------------+



**gravity and rotation**

.. index:: castro.do_grav, castro.moving_center, castro.grav_source_type, castro.do_rotation, castro.rotational_period, castro.rotation_include_centrifugal, castro.rotation_include_coriolis, castro.state_in_rotating_frame, castro.rot_source_type, castro.implicit_rotation_update, castro.rot_axis, castro.use_point_mass, castro.point_mass, castro.point_mass_fix_solution


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``do_grav``                            | permits gravity calculation to be turned on and off     | -1            |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``moving_center``                      | to we recompute the center used for the multipole       | 0             |
|                                        | gravity solve each step?                                |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``grav_source_type``                   | determines how the gravitational source term is added   | 4             |
|                                        | to the momentum and energy state variables.             |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``do_rotation``                        | permits rotation calculation to be turned on and off    | -1            |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``rotational_period``                  | the rotation period for the corotating frame            | -1.e200       |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``rotation_include_centrifugal``       | permits the centrifugal terms in the rotation to be     | 1             |
|                                        | turned on and off                                       |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``rotation_include_coriolis``          | permits the Coriolis terms in the rotation to be turned | 1             |
|                                        | on and off                                              |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``state_in_rotating_frame``            | Which reference frame to measure the state variables    | 1             |
|                                        | with respect to. The standard in the literature when    |               |
|                                        | using a rotating reference frame is to measure the      |               |
|                                        | state variables with respect to an observer fixed in    |               |
|                                        | that rotating frame. If this option is disabled by      |               |
|                                        | setting it to 0, the state variables will be measured   |               |
|                                        | with respect to an observer fixed in the inertial frame |               |
|                                        | (but the frame will still rotate).                      |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``rot_source_type``                    | determines how the rotation source terms are added to   | 4             |
|                                        | the momentum and energy equations                       |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``implicit_rotation_update``           | we can do a implicit solution of the rotation update to | 1             |
|                                        | allow for better coupling of the Coriolis terms         |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``rot_axis``                           | the coordinate axis (:math:`x=1`, :math:`y=2`,          | 3             |
|                                        | :math:`z=3`) for the rotation vector                    |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``use_point_mass``                     | include a central point mass                            | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``point_mass``                         | mass of the point mass                                  | 0.0           |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``point_mass_fix_solution``            | if we have a central point mass, we can prevent mass    | 0             |
|                                        | from building up in the zones adjacent to it by keeping |               |
|                                        | their density constant and adding their mass to the     |               |
|                                        | point mass object                                       |               |
+----------------------------------------+---------------------------------------------------------+---------------+



**parallelization**

.. index:: castro.do_acc, castro.bndry_func_thread_safe


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``do_acc``                             | determines whether we use accelerators for specific     | -1            |
|                                        | loops                                                   |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``bndry_func_thread_safe``             |                                                         | 1             |
+----------------------------------------+---------------------------------------------------------+---------------+



**embiggening**

.. index:: castro.grown_factor, castro.star_at_center


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``grown_factor``                       | the factor by which to extend the domain upon restart   | 1             |
|                                        | for embiggening                                         |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``star_at_center``                     | used with the embiggening routines to determine how to  | -1            |
|                                        | extend the domain                                       |               |
+----------------------------------------+---------------------------------------------------------+---------------+



**self-consistent field initialization**

.. index:: castro.do_scf_initial_model, castro.scf_maximum_density, castro.scf_equatorial_radius, castro.scf_polar_radius, castro.scf_relax_tol, castro.scf_max_iterations


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``do_scf_initial_model``               | Should we use SCF to construct the initial model?       | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``scf_maximum_density``                | Maximum density on the domain when using SCF            | -1.e6         |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``scf_equatorial_radius``              | Equatorial and polar radii of the star constructed by   | -1.e9         |
|                                        | SCF                                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``scf_polar_radius``                   |                                                         | -1.e9         |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``scf_relax_tol``                      | SCF relaxation tolerance                                | 1.e-3         |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``scf_max_iterations``                 | Maximum number of SCF iterations                        | 30            |
+----------------------------------------+---------------------------------------------------------+---------------+



**refinement**

.. index:: castro.do_special_tagging, castro.spherical_star


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``do_special_tagging``                 |                                                         | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``spherical_star``                     |                                                         | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+



**diagnostics, I/O**

.. index:: castro.v, castro.dump_old, castro.domain_is_plane_parallel, castro.print_update_diagnostics, castro.sum_interval, castro.sum_per, castro.show_center_of_mass, castro.job_name, castro.output_at_completion, castro.reset_checkpoint_time, castro.reset_checkpoint_step


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``v``                                  | verbosity level (higher numbers mean more output)       | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``dump_old``                           | do we dump the old state into the checkpoint files too? | false         |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``domain_is_plane_parallel``           | do we assume the domain is plane parallel when          | false         |
|                                        | computing some of the derived quantities (e.g. radial   |               |
|                                        | velocity).  Note: this will always assume that the last |               |
|                                        | spatial dimension is vertical                           |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``print_update_diagnostics``           | display information about updates to the state (how     | (0, 1)        |
|                                        | much mass, momentum, energy added)                      |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sum_interval``                       | how often (number of coarse timesteps) to compute       | -1            |
|                                        | integral sums (for runtime diagnostics)                 |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``sum_per``                            | how often (simulation time) to compute integral sums    | -1.0e0        |
|                                        | (for runtime diagnostics)                               |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``show_center_of_mass``                | display center of mass diagnostics                      | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``job_name``                           | a string describing the simulation that will be copied  | "Castro"      |
|                                        | into the plotfile's ``job_info`` file                   |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``output_at_completion``               | write a final plotfile and checkpoint upon completion   | 1             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``reset_checkpoint_time``              | Do we want to reset the time in the checkpoint? This    | -1.e200       |
|                                        | ONLY takes effect if amr.regrid_on_restart = 1 and      |               |
|                                        | amr.checkpoint_on_restart = 1, (which require that      |               |
|                                        | max_step and stop_time be less than the value in the    |               |
|                                        | checkpoint) and you set it to value greater than this   |               |
|                                        | default value.                                          |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``reset_checkpoint_step``              | Do we want to reset the number of steps in the          | -1            |
|                                        | checkpoint? This ONLY takes effect if                   |               |
|                                        | amr.regrid_on_restart = 1 and amr.checkpoint_on_restart |               |
|                                        | = 1, (which require that max_step and stop_time be less |               |
|                                        | than the value in the checkpoint) and you set it to     |               |
|                                        | value greater than this default value.                  |               |
+----------------------------------------+---------------------------------------------------------+---------------+



**particles**

.. index:: castro.do_tracer_particles


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``do_tracer_particles``                | permits tracer particle calculation to be turned on and | 0             |
|                                        | off                                                     |               |
+----------------------------------------+---------------------------------------------------------+---------------+



namespace: ``diffusion``
------------------------

.. index:: diffusion.v, diffusion.mlmg_maxorder


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``v``                                  | the level of verbosity for the diffusion solve (higher  | 0             |
|                                        | number means more output)                               |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``mlmg_maxorder``                      | Use MLMG as the operator                                | 4             |
+----------------------------------------+---------------------------------------------------------+---------------+



namespace: ``gravity``
----------------------

.. index:: gravity.gravity_type, gravity.const_grav, gravity.direct_sum_bcs, gravity.drdxfac, gravity.max_multipole_order, gravity.v, gravity.no_sync, gravity.no_composite, gravity.do_composite_phi_correction, gravity.max_solve_level, gravity.get_g_from_phi, gravity.mlmg_max_fmg_iter, gravity.mlmg_agglomeration, gravity.mlmg_consolidation, gravity.mlmg_nsolve


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``gravity_type``                       | what type                                               | "fillme"      |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``const_grav``                         | if doing constant gravity, what is the acceleration     | 0.0           |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``direct_sum_bcs``                     | Check if the user wants to compute the boundary         | 0             |
|                                        | conditions using the brute force method.  Default is    |               |
|                                        | false, since this method is slow.                       |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``drdxfac``                            | ratio of dr for monopole gravity binning to grid        | 1             |
|                                        | resolution                                              |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``max_multipole_order``                | the maximum mulitpole order to use for multipole BCs    | 0             |
|                                        | when doing Poisson gravity                              |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``v``                                  | the level of verbosity for the gravity solve (higher    | 0             |
|                                        | number means more output on the status of the solve /   |               |
|                                        | multigrid                                               |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``no_sync``                            | do we perform the synchronization at coarse-fine        | 0             |
|                                        | interfaces?                                             |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``no_composite``                       | do we do a composite solve?                             | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``do_composite_phi_correction``        | should we apply a lagged correction to the potential    | 1             |
|                                        | that gets us closer to the composite solution? This     |               |
|                                        | makes the resulting fine grid calculation slightly more |               |
|                                        | accurate, at the cost of an additional Poisson solve    |               |
|                                        | per timestep.                                           |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``max_solve_level``                    | For all gravity types, we can choose a maximum level    | MAX_LEV-1     |
|                                        | for explicitly calculating the gravity and associated   |               |
|                                        | potential. Above that level, we interpolate from        |               |
|                                        | coarser levels.                                         |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``get_g_from_phi``                     | For non-Poisson gravity, do we want to construct the    | 0             |
|                                        | gravitational acceleration by taking the gradient of    |               |
|                                        | the potential, rather than constructing it directly?    |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``mlmg_max_fmg_iter``                  | how many FMG cycles?                                    | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``mlmg_agglomeration``                 | Do agglomeration?                                       | 1             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``mlmg_consolidation``                 |                                                         | 1             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``mlmg_nsolve``                        | Do N-Solve?                                             | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+



namespace: ``particles``
------------------------

.. index:: particles.v, particles.particle_init_file, particles.particle_restart_file, particles.restart_from_nonparticle_chkfile, particles.particle_output_file, particles.timestamp_dir, particles.timestamp_density, particles.timestamp_temperature


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``v``                                  | the level of verbosity for the tracer particle (0 or 1) | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``particle_init_file``                 | the name of an input file containing the total particle | ""            |
|                                        | number and the initial position of each particle.       |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``particle_restart_file``              | the name of a file with new particles at restart        | ""            |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``restart_from_nonparticle_chkfile``   | to restart from a checkpoint that was written with      | 0             |
|                                        | ``USE_PARTICLES`` =FALSE                                |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``particle_output_file``               | the name of timestamp files.                            | ""            |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``timestamp_dir``                      | the name of a directory in which timestamp files are    | ""            |
|                                        | stored.                                                 |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``timestamp_density``                  | whether the local densities at given positions of       | 1             |
|                                        | particles are stored in output files                    |               |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``timestamp_temperature``              | whether the local temperatures at given positions of    | 0             |
|                                        | particles are stored in output files                    |               |
+----------------------------------------+---------------------------------------------------------+---------------+



namespace: ``radiation``
------------------------

.. index:: radiation.prop_temp_floor, radiation.flatten_pp_threshold


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``prop_temp_floor``                    |                                                         | 0.0           |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``flatten_pp_threshold``               |                                                         | -1.0          |
+----------------------------------------+---------------------------------------------------------+---------------+



namespace: ``radsolve``
-----------------------

.. index:: radsolve.level_solver_flag, radsolve.use_hypre_nonsymmetric_terms, radsolve.reltol, radsolve.abstol, radsolve.maxiter, radsolve.alpha, radsolve.beta, radsolve.v


+----------------------------------------+---------------------------------------------------------+---------------+
| parameter                              | description                                             | default value |
+========================================+=========================================================+===============+
| ``level_solver_flag``                  | the linear solver option to use                         | 1             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``use_hypre_nonsymmetric_terms``       |                                                         | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``reltol``                             |                                                         | 1.e-10        |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``abstol``                             |                                                         | 1.e-10        |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``maxiter``                            |                                                         | 40            |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``alpha``                              |                                                         | 1.0           |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``beta``                               |                                                         | 1.0           |
+----------------------------------------+---------------------------------------------------------+---------------+
| ``v``                                  |                                                         | 0             |
+----------------------------------------+---------------------------------------------------------+---------------+



