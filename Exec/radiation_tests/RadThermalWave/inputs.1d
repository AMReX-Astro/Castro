# ------------------  INPUTS TO MAIN PROGRAM  -------------------
max_step  = 2000    # maximum timestep
stop_time = 0.001

geometry.is_periodic = 0 0 0

geometry.coord_sys = 2  # 0 => cart, 1 => RZ, 2 => Spherical

geometry.prob_lo   =   0.0   
geometry.prob_hi   =   200.0 

amr.n_cell   = 64 

amr.max_level       = 2       # maximum level number allowed
amr.ref_ratio       = 2 2 2 2 # refinement ratio
amr.regrid_int      = 2       # how often to regrid
amr.n_error_buf     = 4 4 4 4 # number of buffer cells in error est
amr.grid_eff        = 0.7     # what constitutes an efficient grid
amr.blocking_factor = 4       # block factor in grid generation
amr.max_grid_size   = 32

amr.check_file      = chk      # root name of checkpoint file
amr.check_int       = 1000    # number of timesteps between checkpoints

amr.plot_file       = plt
amr.plot_int        = 100      # number of timesteps between plot files
amr.derive_plot_vars = ALL


amr.grid_log        = grdlog  # name of grid logging file
amr.v = 1

amr.probin_file     = probin.1d

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall
# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
castro.lo_bc       =  3 
castro.hi_bc       =  2 

castro.dt_cutoff      = 1.e-20  # level 0 timestep below which we halt
castro.cfl            = 0.8     # cfl number for hyperbolic system
castro.init_shrink    = 1.0     # scale back initial timestep
castro.initial_dt     = 1.e-15
#castro.fixed_dt       = 1.e-5
castro.change_max     = 1.05

castro.sum_interval   = 1       # timesteps between computing mass
castro.do_reflux      = 1       # 1 => do refluxing
castro.gravity        = 0

castro.do_hydro       = 1
castro.do_react       = 0
castro.do_radiation   = 1

# hydro cutoff parameters
castro.small_dens     = 1.e-20
castro.small_temp = 0.0

# ------------------  INPUTS TO RADIATION CLASS  -------------------

##### SolverType #####
# 0: single group diffusion w/o coupling to hydro
# 5: SGFLD       6: MGFLD
radiation.SolverType = 5

radiation.comoving = 1

# 0: no limiter, 2: app. LP, 12: Bruenn, 22: square root, 32: Minerbo
radiation.limiter = 0

# 0: f = lambda, 1: f = 1/3, 2: f = 1-2*lambda, 3: f = lambda+(lambda*R)^2
# 4: f = 1/3 + 2/3*(F/cE)^2
# If limiter = 12 or 22, option 3 will not be a monotonic function of R.
# So we might want to use option 2 or 4 in these cases.
radiation.closure = 3

radiation.reltol  = 1.e-6 # relative tolerance for implicit update loop
radiation.abstol  = 0.0   # absolute tolerance for implicit update loop
radiation.maxiter = 50    # return after numiter iterations if not converged

radiation.v               = 2    # verbosity

# We set radiation boundary conditions directly since they do not
# correspond neatly to the physical boundary conditions used for the fluid.
# The choices are:
# 101 = LO_DIRICHLET           102 = LO_NEUMANN
# 104 = LO_MARSHAK             105 = LO_SANCHEZ_POMRANING

radiation.lo_bc     = 102 102 102
radiation.hi_bc     = 102 102 102

# For each boundary, we can specify either a constant boundary value
# or use a Fortran function FORT_RADBNDRY to specify values that vary
# in space and time.

# If bcflag is 0 then bcval is used, otherwise FORT_RADBNDRY used:

radiation.lo_bcflag = 0 0 0
radiation.hi_bcflag = 0 0 0

# bcval is interpreted differently depending on the boundary condition
# 101 = LO_DIRICHLET           bcval is Dirichlet value of rad energy density
# 102 = LO_NEUMANN             bcval is inward flux of rad energy
# 104 = LO_MARSHAK             bcval is incident flux
# 105 = LO_SANCHEZ_POMRANING   bcval is incident flux

radiation.lo_bcval = 0.0 0.0 0.0
radiation.hi_bcval = 0.0 0.0 0.0

# delta_temp is used in computing numerical derivatives.
# So it should be small, but not too small compared with temperature
# The default is 1.0 (Kelvin)
radiation.delta_temp = 1.e-4

# ------------------  INPUTS TO RADIATION SOLVER CLASS  -------------------

# solver flag values <  100 use HypreABec, support symmetric matrices only
# solver flag values >= 100 use HypreMultiABec, support nonsymmetric matrices
#
# PFMG does not supprt 1D.
# ParCSR does not work for periodic boundaries.
# For MGFLD with accelerate = 2, must use >=100.
#
# 0     SMG
# 1     PFMG  (>= 2D only)
# 100   AMG   using ParCSR ObjectType
# 102   GMRES using ParCSR ObjectType
# 103   GMRES using SStruct ObjectType
# 104   GMRES using AMG as preconditioner
# 109   GMRES using Struct SMG/PFMG as preconditioner
# 150   AMG   using ParCSR ObjectType
# 1002  PCG   using ParCSR ObjectType
# 1003  PCG   using SStruct ObjectType

radsolve.level_solver_flag = 109

radsolve.reltol     = 1.0e-11 # relative tolerance
radsolve.abstol     = 0.0     # absolute tolerance (often not necessary)
radsolve.maxiter    = 200     # linear solver iteration limit

radsolve.v = 1      # verbosity

hmabec.verbose = 1  # verbosity for HypreMultiABec solvers
habec.verbose  = 1  # verbosity for HypreABec solvers

#
# The default strategy is SFC.
#
DistributionMapping.strategy = ROUNDROBIN
DistributionMapping.strategy = KNAPSACK
DistributionMapping.strategy = SFC
